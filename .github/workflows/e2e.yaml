name: e2e

on:
  pull_request:
  workflow_dispatch:
    # inputs:
    #   os:
    #     description: Choose os
    #     required: true
    #     type: choice
    #     options:
    #     - ubuntu-latest
    #     - macos-latest
    #     - windows-latest
  
jobs:
  build:
      name: Build and Test
      timeout-minutes: 15
      strategy:
        fail-fast: true
        matrix:
          os: [ubuntu-latest, windows-latest]
          node-version: [18]
          installer: ['pnpm run']
          ## comment out for support of node 19,20
          # experimental: [false]

          ## comment for support of node 19,20
          exclude:
            - os: ubuntu-latest
              node-version: 18
              installer: pnpm run
          include: 
            - os: windows-latest
              node-version: 18
              installer: pnpm run
            - os: ubuntu-latest
              node-version: 18
              installer: bun run

          ## comment out for support of node 19,20
          # include: 

            # - os: windows-latest
            #   installer: pnpm run
            # - os: ubuntu-latest
            #   installer: bun run
            # - os: windows-latest
            #   node-version: 19
            #   installer: pnpm run
            #   experimental: true
            # - os: ubuntu-latest
            #   node-version: 19
            #   installer: bun run
            #   experimental: true

            # - os: windows-latest
            #   node-version: 20
            #   installer: pnpm run
            #   experimental: true
            # - os: ubuntu-latest
            #   node-version: 20
            #   installer: bun run
            #   experimental: true
            
      runs-on: ${{ matrix.os }}
      continue-on-error: ${{ matrix.experimental || false }}
      # To use Remote Caching, uncomment the next lines and follow the steps below.
      # env:
      #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
 
      steps:
        - name: Check out code
          uses: actions/checkout@v3
          with:
            fetch-depth: 2
 
        - uses: pnpm/action-setup@v2.2.4
          with:
            version: 8
 
        - name: Setup Node.js(${{ matrix.node-version }}) environment
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'pnpm'
            registry-url: 'https://registry.npmjs.org'
 
        - name: Install dependencies
          run: pnpm install --prefer-offline
          
        - name: Install bun
          if: ${{ matrix.os == 'ubuntu-latest' }}
          uses: oven-sh/setup-bun@v1

        - uses: dtinth/setup-github-actions-caching-for-turbo@v1
          if: ${{ matrix.os == 'ubuntu-latest' }}
          with:
           # Set the prefix for the cache keys.
            cache-prefix: kubb_

        - name: Build
          run: ${{ matrix.installer }} build

        - name: Install e2e dependencies
          run: pnpm install --prefer-offline
          working-directory: ./e2e

        - name: E2e
          working-directory: ./e2e
          run: |
            ${{ matrix.installer }} generate --input ./schemas/petStore.yaml
            ${{ matrix.installer }} generate --input ./schemas/twitter.json
            ${{ matrix.installer }} generate --input ./schemas/twitter2.json
            ${{ matrix.installer }} generate --input ./schemas/bunq.com.json
            ${{ matrix.installer }} generate --input ./schemas/jokesOne.yaml
            ${{ matrix.installer }} generate --input ./schemas/readme.io.yaml
            ${{ matrix.installer }} generate --input ./schemas/worldtime.yaml
            ${{ matrix.installer }} generate --input ./schemas/zalando.yaml
            ${{ matrix.installer }} generate --input ./schemas/requestBody.yaml
            ${{ matrix.installer }} clean


