/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { petSchema } from './petSchema.js'
import { z } from 'zod'

/**
 * @description Successful operation
 */
export const updatePet200Schema = z.lazy(() => petSchema).schema.omit({ name: true })

/**
 * @description accepted operation
 */
export const updatePet202Schema = z.object({
  id: z.optional(z.number().int()),
})

/**
 * @description Invalid ID supplied
 */
export const updatePet400Schema = z.any()

/**
 * @description Pet not found
 */
export const updatePet404Schema = z.any()

/**
 * @description Validation exception
 */
export const updatePet405Schema = z.any()

/**
 * @description Update an existent pet in the store
 */
export const updatePetMutationRequestSchema = z.lazy(() => petSchema).schema.omit({ id: true })

export const updatePetMutationResponseSchema = z.union([z.lazy(() => updatePet200Schema), z.lazy(() => updatePet202Schema)])
