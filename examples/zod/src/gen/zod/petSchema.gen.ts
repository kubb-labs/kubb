/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from '../../zod.ts'
import { categorySchema } from './categorySchema.gen.ts'
import { tagSchema } from './tagSchema.gen.ts'

export const petSchema = z.object({
  id: z.optional(z.number().int()),
  internalId: z.optional(z.string().regex(/^[0-9]{1,19}$/)),
  name: z.string().uuid(),
  category: z.optional(z.lazy(() => categorySchema)),
  photoUrls: z.array(z.string()),
  tags: z.optional(z.array(z.lazy(() => tagSchema))),
  status: z.optional(z.enum(['available', 'pending', 'sold']).describe('pet status in the store')),
})

export type PetSchema = z.infer<typeof petSchema>
