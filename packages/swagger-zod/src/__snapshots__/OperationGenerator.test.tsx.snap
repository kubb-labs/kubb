// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`OperationGenerator > [DELETE] should generate with unknownType \`any\` 1`] = `
[
  {
    "baseName": "delete_pet-petid.ts",
    "env": undefined,
    "exports": [],
    "id": undefined,
    "imports": [
      {
        "isTypeOnly": undefined,
        "name": [
          "z",
        ],
        "path": "zod",
        "root": undefined,
      },
    ],
    "meta": {
      "name": "delete_pet-petid",
      "pluginKey": undefined,
      "tag": undefined,
    },
    "override": undefined,
    "path": "delete_pet-petid.ts",
    "source": "export const DeletePetPetidMutationResponse = z.any();
",
  },
]
`;

exports[`OperationGenerator > [DELETE] should generate with unknownType \`unknown\` 1`] = `
[
  {
    "baseName": "delete_pet-petid.ts",
    "env": undefined,
    "exports": [],
    "id": undefined,
    "imports": [
      {
        "isTypeOnly": undefined,
        "name": [
          "z",
        ],
        "path": "zod",
        "root": undefined,
      },
    ],
    "meta": {
      "name": "delete_pet-petid",
      "pluginKey": undefined,
      "tag": undefined,
    },
    "override": undefined,
    "path": "delete_pet-petid.ts",
    "source": "export const DeletePetPetidMutationResponse = z.unknown();
",
  },
]
`;

exports[`OperationGenerator > [GET] should generate 1`] = `
[
  {
    "baseName": "listPets.ts",
    "env": undefined,
    "exports": [],
    "id": undefined,
    "imports": [
      {
        "isTypeOnly": undefined,
        "name": [
          "z",
        ],
        "path": "zod",
        "root": undefined,
      },
      {
        "isTypeOnly": false,
        "name": [
          "Pets",
        ],
        "path": "Pets",
        "root": "listPets.ts",
      },
    ],
    "meta": {
      "name": "listPets",
      "pluginKey": undefined,
      "tag": "pets",
    },
    "override": undefined,
    "path": "listPets.ts",
    "source": "export const ListPetsQueryParams = z.object({ "limit": z.string().describe(\`How many items to return at one time (max 100)\`).optional() }).optional();

 /**
       * @description A paged array of pets
       */
export const ListPetsQueryResponse = z.lazy(() => Pets);
",
  },
]
`;

exports[`OperationGenerator > [GET] should generate 2`] = `
[
  {
    "baseName": "showPetById.ts",
    "env": undefined,
    "exports": [],
    "id": undefined,
    "imports": [
      {
        "isTypeOnly": undefined,
        "name": [
          "z",
        ],
        "path": "zod",
        "root": undefined,
      },
      {
        "isTypeOnly": false,
        "name": [
          "Pet",
        ],
        "path": "Pet",
        "root": "showPetById.ts",
      },
    ],
    "meta": {
      "name": "showPetById",
      "pluginKey": undefined,
      "tag": "pets",
    },
    "override": undefined,
    "path": "showPetById.ts",
    "source": "export const ShowPetByIdPathParams = z.object({ "petId": z.string().describe(\`The id of the pet to retrieve\`), "testId": z.string().describe(\`The id of the pet to retrieve\`) });

 /**
       * @description Expected response to a valid request
       */
export const ShowPetByIdQueryResponse = z.lazy(() => Pet);
",
  },
]
`;

exports[`OperationGenerator > [POST] should generate 1`] = `
[
  {
    "baseName": "createPets.ts",
    "env": undefined,
    "exports": [],
    "id": undefined,
    "imports": [
      {
        "isTypeOnly": undefined,
        "name": [
          "z",
        ],
        "path": "zod",
        "root": undefined,
      },
    ],
    "meta": {
      "name": "createPets",
      "pluginKey": undefined,
      "tag": "pets",
    },
    "override": undefined,
    "path": "createPets.ts",
    "source": "export const CreatePetsMutationRequest = z.object({ "name": z.string(), "tag": z.string() });
export const CreatePetsMutationResponse = z.any();
",
  },
]
`;
