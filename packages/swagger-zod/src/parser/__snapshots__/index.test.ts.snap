// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`zod parse > 'and' 1`] = `"z.string().and(z.number())"`;

exports[`zod parse > 'any' 1`] = `"z.any()"`;

exports[`zod parse > 'array' 1`] = `"z.array(z.union([z.string(), z.number()]))"`;

exports[`zod parse > 'arrayAdvanced' 1`] = `"z.array(z.number().min(1).max(10)).min(3).max(10)"`;

exports[`zod parse > 'arrayEmpty' 1`] = `"z.array()"`;

exports[`zod parse > 'arrayRef' 1`] = `"z.array(z.lazy(() => Pet))"`;

exports[`zod parse > 'arrayRegex' 1`] = `"z.array(z.string().regex(new RegExp('^[a-zA-Z0-9]{1,13}$'))).min(3).max(10)"`;

exports[`zod parse > 'blob' 1`] = `"z.string()"`;

exports[`zod parse > 'boolean' 1`] = `"z.boolean()"`;

exports[`zod parse > 'catchall' 1`] = `"z.object({}).catchall(z.lazy(() => Pet))"`;

exports[`zod parse > 'date' 1`] = `"z.string().date()"`;

exports[`zod parse > 'datetime' 1`] = `"z.string().datetime()"`;

exports[`zod parse > 'default' 1`] = `".default()"`;

exports[`zod parse > 'default' 2`] = `".default(default)"`;

exports[`zod parse > 'enum' 1`] = `"z.enum(["A", "B", "C", "2"])"`;

exports[`zod parse > 'integer' 1`] = `"z.number().int()"`;

exports[`zod parse > 'matches' 1`] = `".regex(new RegExp('^[A-Z]{2}$'))"`;

exports[`zod parse > 'matchesReg' 1`] = `".regex(new RegExp('node_modules'))"`;

exports[`zod parse > 'max' 1`] = `".max(2)"`;

exports[`zod parse > 'min' 1`] = `".min(2)"`;

exports[`zod parse > 'nullable' 1`] = `".nullable()"`;

exports[`zod parse > 'number' 1`] = `"z.number()"`;

exports[`zod parse > 'object' 1`] = `"z.object({"firstName": z.string().min(2),"address": z.string().describe("Your address").nullable()})"`;

exports[`zod parse > 'objectAnd' 1`] = `"z.object({"firstName": z.string().min(2).default(test),"age": z.number().min(3).default(2),"address": z.string().and(z.number()).describe("Your address").nullable()})"`;

exports[`zod parse > 'objectArray' 1`] = `"z.object({"ids": z.array(z.string().regex(new RegExp('^[a-zA-Z0-9]{1,13}$'))).min(3).max(10)})"`;

exports[`zod parse > 'objectDates' 1`] = `"z.object({"dateTime": z.string().datetime({ offset: true }),"date": z.string().date(),"time": z.string().time(),"nativeDate": z.date()})"`;

exports[`zod parse > 'objectEmpty' 1`] = `"z.object({})"`;

exports[`zod parse > 'objectEnum' 1`] = `"z.object({"version": z.enum(["A", "B", "C", "2"]).min(4).describe("Your address")})"`;

exports[`zod parse > 'objectOptional' 1`] = `"z.object({"firstName": z.string().min(2).optional(),"address": z.string().describe("Your address").nullable()})"`;

exports[`zod parse > 'primitiveDate' 1`] = `"z.date()"`;

exports[`zod parse > 'ref' 1`] = `"z.lazy(() => Pet)"`;

exports[`zod parse > 'string' 1`] = `"z.string()"`;

exports[`zod parse > 'stringLocal' 1`] = `"z.string().datetime({ local: true })"`;

exports[`zod parse > 'stringOffset' 1`] = `"z.string().datetime({ offset: true })"`;

exports[`zod parse > 'time' 1`] = `"z.string().time()"`;

exports[`zod parse > 'tuple' 1`] = `"z.tuple([])"`;

exports[`zod parse > 'tupleMulti' 1`] = `"z.tuple([z.string(), z.number()])"`;

exports[`zod parse > 'undefined' 1`] = `"z.undefined()"`;

exports[`zod parse > 'union' 1`] = `"z.union([z.string(), z.number()])"`;

exports[`zod parse > 'unionOne' 1`] = `"z.string()"`;

exports[`zod parse > 'unknown' 1`] = `"z.unknown()"`;
