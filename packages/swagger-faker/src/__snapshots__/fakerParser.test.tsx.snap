// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fakerParser > 'Object' 1`] = `
"/**
     * @description "Your address" */
    
function Object () {
        
}

export function Object(override: NonNullable<Partial<undefined>> = {}) {
  
return {
  ...{"firstName": faker.string.alpha(),"age": faker.number.float(),"address": Object.assign({},faker.string.alpha(),faker.number.float())},
  ...override
};
}"
`;

exports[`fakerParser > 'Order' 1`] = `
"    
function Order () {
        
}

export function Order(override: NonNullable<Partial<undefined>> = {}) {
  
return {
  ...{"status": faker.helpers.arrayElement<any>(["Placed", "Approved"])},
  ...override
};
}"
`;

exports[`fakerParser > 'Record' 1`] = `
"    
function Record () {
        
}

export function Record(override: NonNullable<Partial<undefined>> = {}) {
  
return {
  ...{},
  ...override
};
}"
`;

exports[`fakerParser > 'Upload' 1`] = `
"    
function Upload () {
        
}

export function Upload(override?: NonNullable<Partial<undefined>>) {
  
return undefined;
}"
`;

exports[`parseFakerMeta > 'and' 1`] = `"Object.assign({},faker.string.alpha(),faker.number.float())"`;

exports[`parseFakerMeta > 'any' 1`] = `"undefined"`;

exports[`parseFakerMeta > 'array' 1`] = `"faker.helpers.arrayElements([faker.string.alpha(),faker.number.float()]) as any"`;

exports[`parseFakerMeta > 'arrayEmpty' 1`] = `"faker.helpers.arrayElements([]) as any"`;

exports[`parseFakerMeta > 'arrayRef' 1`] = `"faker.helpers.arrayElements([Pet()]) as any"`;

exports[`parseFakerMeta > 'blob' 1`] = `undefined`;

exports[`parseFakerMeta > 'boolean' 1`] = `"faker.datatype.boolean()"`;

exports[`parseFakerMeta > 'catchall' 1`] = `"{}"`;

exports[`parseFakerMeta > 'date' 1`] = `"faker.date.anytime()"`;

exports[`parseFakerMeta > 'datetime' 1`] = `"faker.string.alpha()"`;

exports[`parseFakerMeta > 'default' 1`] = `undefined`;

exports[`parseFakerMeta > 'default' 2`] = `undefined`;

exports[`parseFakerMeta > 'enum' 1`] = `"faker.helpers.arrayElement<any>(["A", "B", "C", 2])"`;

exports[`parseFakerMeta > 'matches' 1`] = `"faker.helpers.fromRegExp(new RegExp('^[A-Z]{2}$'))"`;

exports[`parseFakerMeta > 'matchesReg' 1`] = `"faker.helpers.fromRegExp(new RegExp('node_modules'))"`;

exports[`parseFakerMeta > 'max' 1`] = `undefined`;

exports[`parseFakerMeta > 'min' 1`] = `undefined`;

exports[`parseFakerMeta > 'nullable' 1`] = `undefined`;

exports[`parseFakerMeta > 'number' 1`] = `"faker.number.float()"`;

exports[`parseFakerMeta > 'object' 1`] = `"{"firstName": faker.string.alpha(),"address": faker.string.alpha()}"`;

exports[`parseFakerMeta > 'objectAnd' 1`] = `"{"firstName": faker.string.alpha(),"age": faker.number.float(),"address": Object.assign({},faker.string.alpha(),faker.number.float())}"`;

exports[`parseFakerMeta > 'objectEmpty' 1`] = `"{}"`;

exports[`parseFakerMeta > 'objectOptional' 1`] = `"{"firstName": faker.string.alpha(),"address": faker.string.alpha()}"`;

exports[`parseFakerMeta > 'ref' 1`] = `"Pet()"`;

exports[`parseFakerMeta > 'string' 1`] = `"faker.string.alpha()"`;

exports[`parseFakerMeta > 'tuple' 1`] = `"faker.helpers.arrayElements([]) as any"`;

exports[`parseFakerMeta > 'tupleMulti' 1`] = `"faker.helpers.arrayElements([faker.string.alpha(),faker.number.float()]) as any"`;

exports[`parseFakerMeta > 'undefined' 1`] = `"undefined"`;

exports[`parseFakerMeta > 'union' 1`] = `"faker.helpers.arrayElement([faker.string.alpha(),faker.number.float()]) as any"`;

exports[`parseFakerMeta > 'unionOne' 1`] = `"faker.helpers.arrayElement([faker.string.alpha()]) as any"`;

exports[`parseFakerMeta > 'unknown' 1`] = `"unknown()"`;
