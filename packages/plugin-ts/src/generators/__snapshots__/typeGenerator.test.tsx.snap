// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`typeGenerator operation > 'createPet with unknownType unknown' 1`] = `
"/**
 * @description Null response
*/
export type CreatePets201 = (error & {
    name?: errorCode;
});

/**
 * @description unexpected error
*/
export type CreatePetsError = error;

export type CreatePetsMutationRequest = {
    /**
     * @type string
    */
    name: string;
    /**
     * @type string
    */
    tag: string;
};

/**
 * @description Null response
*/
export type CreatePetsMutationResponse = (error & {
    name?: errorCode;
});

export type createPetsMutation = {
    Response: createPetsMutationResponse;
    Request: createPetsMutationRequest;
};"
`;

exports[`typeGenerator operation > 'createPet' 1`] = `
"/**
 * @description Null response
*/
export type CreatePets201 = (error & {
    name?: errorCode;
});

/**
 * @description unexpected error
*/
export type CreatePetsError = error;

export type CreatePetsMutationRequest = {
    /**
     * @type string
    */
    name: string;
    /**
     * @type string
    */
    tag: string;
};

/**
 * @description Null response
*/
export type CreatePetsMutationResponse = (error & {
    name?: errorCode;
});

export type createPetsMutation = {
    Response: createPetsMutationResponse;
    Request: createPetsMutationRequest;
};"
`;

exports[`typeGenerator operation > 'deletePet' 1`] = `
"export type DeletePetsPetidMutationResponse = any;

export type deletePetsPetidMutation = {
    Response: deletePetsPetidMutationResponse;
};"
`;

exports[`typeGenerator operation > 'getPets' 1`] = `
"export type ListPetsQueryParams = {
    /**
     * @description How many items to return at one time (max 100)
     * @type string | undefined
    */
    limit?: string;
};

/**
 * @description A paged array of pets
*/
export type ListPets200 = pets;

/**
 * @description unexpected error
*/
export type ListPetsError = error;

/**
 * @description A paged array of pets
*/
export type ListPetsQueryResponse = pets;

export type listPetsQuery = {
    Response: listPetsQueryResponse;
    QueryParams: listPetsQueryParams;
};"
`;

exports[`typeGenerator operation > 'showPetById' 1`] = `
"export type ShowPetByIdPathParams = {
    /**
     * @description The id of the pet to retrieve
     * @type string
    */
    petId: string;
    /**
     * @description The id of the pet to retrieve
     * @type string
    */
    testId: string;
};

/**
 * @description Expected response to a valid request
*/
export type ShowPetById200 = pet;

/**
 * @description unexpected error
*/
export type ShowPetByIdError = error;

/**
 * @description Expected response to a valid request
*/
export type ShowPetByIdQueryResponse = pet;

export type showPetByIdQuery = {
    Response: showPetByIdQueryResponse;
    PathParams: showPetByIdPathParams;
};"
`;

exports[`typeGenerator schema > 'Body_upload_file_api_assets_post' 1`] = `
"export type bodyUploadFileApiAssetsPost = {
    /**
     * @type string, binary
    */
    file: Blob;
};"
`;

exports[`typeGenerator schema > 'CatTypeAsConst' 1`] = `
"export type cat = {
    /**
     * @type string, uuid
    */
    id: string;
    type: "Cat";
    /**
     * @type boolean | undefined
    */
    meow?: boolean;
};"
`;

exports[`typeGenerator schema > 'DogTypeAsConst' 1`] = `
"export type dog = {
    /**
     * @type string, uuid
    */
    id: string;
    /**
     * @type number | undefined
    */
    bark?: number;
    type: "Dog";
};"
`;

exports[`typeGenerator schema > 'EnumAllOf' 1`] = `
"export const enumAllOfReasonEnum2 = {
    "created_at": "created_at",
    "description": "description"
} as const;

export type EnumAllOfReasonEnum2 = (typeof enumAllOfReasonEnum2)[keyof typeof enumAllOfReasonEnum2];

export type enumAllOf = {
    reason?: EnumAllOfReasonEnum2;
};"
`;

exports[`typeGenerator schema > 'EnumArray' 1`] = `
"export const enumArrayIdentifierEnum2 = {
    "NW": "NW",
    "NE": "NE",
    "SW": "SW",
    "SE": "SE"
} as const;

export type EnumArrayIdentifierEnum2 = (typeof enumArrayIdentifierEnum2)[keyof typeof enumArrayIdentifierEnum2];

export type enumArray = {
    /**
     * @type array | undefined
    */
    identifier?: [
        number,
        string,
        EnumArrayIdentifierEnum2
    ];
};"
`;

exports[`typeGenerator schema > 'EnumInObject' 1`] = `
"export const enumInObjectReasonEnum2 = {
    "created_at": "created_at",
    "description": "description"
} as const;

export type EnumInObjectReasonEnum2 = (typeof enumInObjectReasonEnum2)[keyof typeof enumInObjectReasonEnum2];

export type enumInObject = {
    /**
     * @type string | undefined
    */
    reason?: EnumInObjectReasonEnum2;
};"
`;

exports[`typeGenerator schema > 'EnumItems' 1`] = `
"export const enumItemsEnum2 = {
    "created_at": "created_at",
    "description": "description"
} as const;

export type EnumItemsEnum2 = (typeof enumItemsEnum2)[keyof typeof enumItemsEnum2];

export type enumItems = EnumItemsEnum2[];"
`;

exports[`typeGenerator schema > 'EnumNames' 1`] = `
"export enum EnumNamesTypeEnum2 {
    "Pending" = 0,
    "Received" = 1
}

export type enumNamesType = EnumNamesTypeEnum2;"
`;

exports[`typeGenerator schema > 'EnumNamesConst' 1`] = `
"export const enum EnumNamesTypeEnum2 {
    "Pending" = 0,
    "Received" = 1
}

export type enumNamesType = EnumNamesTypeEnum2;"
`;

exports[`typeGenerator schema > 'EnumNamesLiteral' 1`] = `
"export type EnumNamesTypeEnum2 = 0 | 1;

export type enumNamesType = EnumNamesTypeEnum2;"
`;

exports[`typeGenerator schema > 'EnumNamesPascalConst' 1`] = `
"export const EnumNamesTypeEnum2 = {
    "Pending": 0,
    "Received": 1
} as const;

type EnumNamesTypeEnum2 = (typeof EnumNamesTypeEnum2)[keyof typeof EnumNamesTypeEnum2];

export type enumNamesType = EnumNamesTypeEnum2;"
`;

exports[`typeGenerator schema > 'EnumNamesType' 1`] = `
"export const enumNamesType = {
    "Pending": 0,
    "Received": 1
} as const;

export type EnumNamesTypeEnum2 = (typeof enumNamesType)[keyof typeof enumNamesType];

export type enumNamesType = EnumNamesTypeEnum2;"
`;

exports[`typeGenerator schema > 'EnumNullableMember' 1`] = `
"export const enumNullableMemberEnum2 = {
    "first": "first",
    "second": "second"
} as const;

export type EnumNullableMemberEnum2 = (typeof enumNullableMemberEnum2)[keyof typeof enumNullableMemberEnum2];

export type enumNullableMember = EnumNullableMemberEnum2 | null;"
`;

exports[`typeGenerator schema > 'EnumNullableType' 1`] = `
"export const enumNullableTypeEnum2 = {
    "first": "first",
    "second": "second"
} as const;

export type EnumNullableTypeEnum2 = (typeof enumNullableTypeEnum2)[keyof typeof enumNullableTypeEnum2];

export type enumNullableType = EnumNullableTypeEnum2 | null;"
`;

exports[`typeGenerator schema > 'EnumString' 1`] = `
"export const enumStringEnum2 = {
    "created_at": "created_at",
    "description": "description",
    "FILE.UPLOADED": "FILE.UPLOADED",
    "FILE.DOWNLOADED": "FILE.DOWNLOADED"
} as const;

export type EnumStringEnum2 = (typeof enumStringEnum2)[keyof typeof enumStringEnum2];

export type enumString = EnumStringEnum2;"
`;

exports[`typeGenerator schema > 'EnumVarNamesType' 1`] = `
"export const enumVarNamesTypeEnum2 = {
    "Pending": 0,
    "Received": 1
} as const;

export type EnumVarNamesTypeEnum2 = (typeof enumVarNamesTypeEnum2)[keyof typeof enumVarNamesTypeEnum2];

export type enumVarNamesType = EnumVarNamesTypeEnum2;"
`;

exports[`typeGenerator schema > 'MixedValueTypeConst' 1`] = `
"/**
 * @description This probably should fail miserably
*/
export type mixedValueTypeConst = {
    /**
     * @type number | undefined
    */
    foobar?: "foobar";
};"
`;

exports[`typeGenerator schema > 'NullConstNull' 1`] = `
"/**
 * @description The value of this keyword MAY be null. \\nUse of this keyword is functionally equivalent to an \\"enum\\" (Section 6.1.2) with a single value.\\nAn instance validates successfully against this keyword if its value is equal to the value of the keyword.\\n
*/
export type nullConst = {
    withoutValue?: null;
};"
`;

exports[`typeGenerator schema > 'NumberValueConst' 1`] = `
"/**
 * @description its value is equal to the value of the keyword
*/
export type numberValueConst = {
    /**
     * @type number | undefined
    */
    foobar?: 42;
};"
`;

exports[`typeGenerator schema > 'PetQuestionToken' 1`] = `
"export type pet = {
    /**
     * @type integer, int64
    */
    id: number;
    /**
     * @type string
    */
    name: string;
    /**
     * @type string | undefined
    */
    tag?: string;
    category?: category;
};"
`;

exports[`typeGenerator schema > 'PetQuestionTokenAndUndefined' 1`] = `
"export type pet = {
    /**
     * @type integer, int64
    */
    id: number;
    /**
     * @type string
    */
    name: string;
    /**
     * @type string | undefined
    */
    tag?: string | undefined;
    category?: category | undefined;
};"
`;

exports[`typeGenerator schema > 'PetUndefined' 1`] = `
"export type pet = {
    /**
     * @type integer, int64
    */
    id: number;
    /**
     * @type string
    */
    name: string;
    /**
     * @type string | undefined
    */
    tag: string | undefined;
    category: category | undefined;
};"
`;

exports[`typeGenerator schema > 'Pets' 1`] = `
"export type pets = {
    /**
     * @type integer, int64
    */
    id: number;
    /**
     * @type string
    */
    name: string;
    /**
     * @type string | undefined
    */
    tag?: string;
}[];"
`;

exports[`typeGenerator schema > 'PetsStoreDiscriminator' 1`] = `
"/**
 * @description A project is an analysis project. It has a name, an id, and has a dataset
*/
export type petstore = {
    /**
     * @type integer
    */
    id: number;
    /**
     * @type array | undefined
    */
    pets?: (cat | dog)[];
};"
`;

exports[`typeGenerator schema > 'PetsStoreRef' 1`] = `"export type pets = pet[];"`;

exports[`typeGenerator schema > 'Plain_dateDate' 1`] = `"export type plainDate = Date;"`;

exports[`typeGenerator schema > 'Plain_dateString' 1`] = `"export type plainDate = string;"`;

exports[`typeGenerator schema > 'Plain_email' 1`] = `"export type plainEmail = string;"`;

exports[`typeGenerator schema > 'Plain_file' 1`] = `"export type plainFile = Blob;"`;

exports[`typeGenerator schema > 'Plain_timeDate' 1`] = `"export type plainTime = Date;"`;

exports[`typeGenerator schema > 'Plain_uuid' 1`] = `"export type plainUuid = string;"`;

exports[`typeGenerator schema > 'StringValueConst' 1`] = `
"/**
 * @description its value is equal to the value of the keyword
*/
export type stringValueConst = {
    /**
     * @type string | undefined
    */
    foobar?: "foobar";
};"
`;
