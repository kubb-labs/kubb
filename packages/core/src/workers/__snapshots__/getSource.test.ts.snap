// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`FileManager utils > if combineExports is filtering out duplicated exports 1`] = `
"export * as test from './models'
export type * from './models'
"
`;

exports[`FileManager utils > if combineImports is filtering out duplicated imports 1`] = `
"import type models from './models'
import type { Config } from './models'

const test = models
type Test = Config
"
`;

exports[`FileManager utils > if combineImports is filtering out duplicated imports 2`] = `
"import type models from './models'
import type { Config } from './models'

const test = models
type Test = Config
"
`;

exports[`FileManager utils > if getFileSource is returning code with exports and exports as 1`] = `
"import type { Pets, Lily } from './Pets'
import type Dog from './Dog'

export const test = 2
type Test = Pets | Lily | Dog
"
`;

exports[`FileManager utils > if getFileSource is returning code with exports and exports as 2`] = `
"export type { Pets, Lily } from './Pets'
export type * as Dog from './Dog'
"
`;

exports[`FileManager utils > if getFileSource is returning code with imports 1`] = `
"import type { Pets } from './Pets'

export type Pet = Pets
"
`;

exports[`FileManager utils > if getFileSource is returning code with imports 2`] = `
"import client from './Pets'
import React from './React'
import type { Pets, Cat } from './Pets'

export type Pet = Pets | Cat
const test = [client, React]
"
`;

exports[`FileManager utils > if getFileSource is returning code with imports 3`] = `
"import client from './Pets'
import React from './React'
import type { Pets, Cat } from './Pets'

export type Pet = Pets | Cat
const test = [client, React]
"
`;

exports[`FileManager utils > if getFileSource is returning code with imports and default import 1`] = `
"import type Pets from './Pets'

export type Pet = Pets
"
`;

exports[`FileManager utils > if getFileSource is setting \`process.env\` based on \`env\` object 1`] = `
"export const hello = process.env.HELLO
"
`;

exports[`FileManager utils > if getFileSource is setting \`process.env\` based on \`env\` object 2`] = `
"import type { Pets } from './Pets'

export const hello = process.env['HELLO']
type Test = Pets
"
`;

exports[`FileManager utils > if getFileSource is setting \`process.env\` based on \`env\` object 3`] = `
"import type { Pets } from './Pets'

declare const TEST: string

export const hello = typeof TEST !== 'undefined' ? TEST : undefined
type Test = Pets
"
`;
