info:
  title: Swagger Petstore
openapi: 3.1.0
components:
  schemas:
    Advanced:
      title: ValueSpecification
      required:
        - type
      type: object
      oneOf:
        - $ref: "#/components/schemas/EnumerationValueSpecificationDto"
        - $ref: "#/components/schemas/RangeValueSpecificationDto"
        - $ref: "#/components/schemas/RegexValueSpecificationDto"
        - $ref: "#/components/schemas/SliderValueSpecificationDto"
      properties:
        type:
          minLength: 1
          enum:
            - enum
            - range
            - regex
            - slider
          type: string
          readOnly: true
      additionalProperties: false
      discriminator:
        propertyName: type
        mapping:
          enum: "#/components/schemas/EnumerationValueSpecificationDto"
          range: "#/components/schemas/RangeValueSpecificationDto"
          regex: "#/components/schemas/RegexValueSpecificationDto"
          slider: "#/components/schemas/SliderValueSpecificationDto"
    EnumerationValueSpecificationDto:
      title: EnumerationValueSpecification
      required:
        - enumeration
        - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
          readOnly: true
        enumeration:
          type: array
          items: { }
      additionalProperties: false

    RangeValueSpecificationDto:
      title: RangeValueSpecification
      required:
        - max
        - min
        - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
          readOnly: true
        min:
          type: number
          format: float
        max:
          type: number
          format: float
      additionalProperties: false

    RegexValueSpecificationDto:
      title: RegexValueSpecification
      required:
        - regex
        - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
          readOnly: true
        regex:
          minLength: 1
          type: string
      additionalProperties: false


    SliderValueSpecificationDto:
      title: SliderValueSpecification
      required:
        - left_text
        - max_value
        - right_text
        - type
      type: object
      properties:
        type:
          minLength: 1
          type: string
          readOnly: true
        left_text:
          $ref: "#/components/schemas/LocalizedTextDto"
        right_text:
          $ref: "#/components/schemas/LocalizedTextDto"
        max_value:
          type: integer
          format: int32
      additionalProperties: false

    LocalizedTextDto:
      title: LocalizedText
      required:
        - default_text
        - text_id
      type: object
      properties:
        text_id:
          minLength: 1
          type: string
        default_text:
          minLength: 1
          type: string
      additionalProperties: false
    NullConst:
      description: |
        The value of this keyword MAY be null.
        Use of this keyword is functionally equivalent to an "enum" (Section 6.1.2) with a single value.
        An instance validates successfully against this keyword if its value is equal to the value of the keyword.
      properties:
        withoutValue:
          const:
    StringValueConst:
      description: its value is equal to the value of the keyword
      properties:
        foobar:
          const: "foobar"
          type: string
    NumberValueConst:
      description: its value is equal to the value of the keyword
      properties:
        foobar:
          const: 42
          type: number
    MixedValueTypeConst:
      description: This probably should fail miserably
      properties:
        foobar:
          const: "foobar"
          type: number

    Cat:
      title: Cat
      type: object
      properties:
        id:
          format: uuid
          title: Id
          type: string
        type:
          const: Cat
          title: Type
        meow:
          type: boolean
          title: Meowing prevalence
      required:
      - id
      - type
    Dog:
      title: Dog
      type: object
      properties:
        id:
          format: uuid
          title: Id
          type: string
        bark:
          type: number
          title: Barking frequency
        type:
          const: Dog
          title: Type
      required:
      - id
      - type
    Petstore:
      title: Petstore
      type: object
      description: A project is an analysis project. It has a name, an id, and has
        a dataset
      properties:
        id:
          title: Id
          type: integer
        pets:
          default: []
          items:
            discriminator:
              mapping:
                Cat: "#/components/schemas/Cat"
                Dog: "#/components/schemas/Dog"
              propertyName: type
            oneOf:
            - "$ref": "#/components/schemas/Cat"
            - "$ref": "#/components/schemas/Dog"
          title: Pets
          type: array
      required:
      - id

paths: {}
