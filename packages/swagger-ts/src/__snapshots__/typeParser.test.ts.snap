// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`parseTypeMeta > 'and' 1`] = `
"(string & number)
"
`;

exports[`parseTypeMeta > 'any' 1`] = `
"any
"
`;

exports[`parseTypeMeta > 'array' 1`] = `
"(number | string)[]
"
`;

exports[`parseTypeMeta > 'arrayAdvanced' 1`] = `
"number[]
"
`;

exports[`parseTypeMeta > 'arrayEmpty' 1`] = `
"[
]
"
`;

exports[`parseTypeMeta > 'arrayRef' 1`] = `
"Pet[]
"
`;

exports[`parseTypeMeta > 'blob' 1`] = `
"Blob
"
`;

exports[`parseTypeMeta > 'boolean' 1`] = `
"boolean
"
`;

exports[`parseTypeMeta > 'catchall' 1`] = `
"{
    [key: string]: Pet;
}
"
`;

exports[`parseTypeMeta > 'date' 1`] = `
"Date
"
`;

exports[`parseTypeMeta > 'datetime' 1`] = `
"string
"
`;

exports[`parseTypeMeta > 'default' 1`] = `undefined`;

exports[`parseTypeMeta > 'default' 2`] = `undefined`;

exports[`parseTypeMeta > 'enum' 1`] = `
"Enum
"
`;

exports[`parseTypeMeta > 'matches' 1`] = `undefined`;

exports[`parseTypeMeta > 'matchesReg' 1`] = `undefined`;

exports[`parseTypeMeta > 'max' 1`] = `undefined`;

exports[`parseTypeMeta > 'min' 1`] = `undefined`;

exports[`parseTypeMeta > 'nullable' 1`] = `undefined`;

exports[`parseTypeMeta > 'number' 1`] = `
"number
"
`;

exports[`parseTypeMeta > 'object' 1`] = `
"{
    firstName: string;
    /**
     * @description \\"Your address\\"
    */
    address: string | null;
}
"
`;

exports[`parseTypeMeta > 'objectAnd' 1`] = `
"{
    /**
     * @deprecated
     * @default test
    */
    firstName: string;
    /**
     * @default 2
     * @example 2
    */
    age: number;
    /**
     * @description Your address
    */
    address: (string & number) | null;
}
"
`;

exports[`parseTypeMeta > 'objectEmpty' 1`] = `
"{}
"
`;

exports[`parseTypeMeta > 'objectOptional' 1`] = `
"{
    firstName?: string;
    /**
     * @description \\"Your address\\"
    */
    address: string | null;
}
"
`;

exports[`parseTypeMeta > 'ref' 1`] = `
"Pet
"
`;

exports[`parseTypeMeta > 'string' 1`] = `
"string
"
`;

exports[`parseTypeMeta > 'tuple' 1`] = `
"[
]
"
`;

exports[`parseTypeMeta > 'tupleMulti' 1`] = `
"[
    string,
    number
]
"
`;

exports[`parseTypeMeta > 'undefined' 1`] = `
"undefined
"
`;

exports[`parseTypeMeta > 'union' 1`] = `
"(string | number)
"
`;

exports[`parseTypeMeta > 'unionOne' 1`] = `
"string
"
`;

exports[`parseTypeMeta > 'unknown' 1`] = `
"unknown
"
`;

exports[`typeParser > 'Object' 1`] = `
"export type Object = {
    /**
     * @deprecated
     * @default test
    */
    firstName: string;
    /**
     * @default 2
     * @example 2
    */
    age: number;
    /**
     * @description Your address
    */
    address: (string & number) | null;
} | null;
"
`;

exports[`typeParser > 'Order' 1`] = `
"export const orderStatus = {
    "Placed": "placed",
    "Approved": "approved"
} as const;
export type OrderStatus = (typeof orderStatus)[keyof typeof orderStatus];
export type Order = {
    status: OrderStatus;
};
"
`;

exports[`typeParser > 'Record' 1`] = `
"export type Record = {
    [key: string]: number;
};
"
`;

exports[`typeParser > 'Upload' 1`] = `
"export type Upload = Blob;
"
`;
